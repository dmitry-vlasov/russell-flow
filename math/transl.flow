import sys/system;
import fs/filesystem;
import net/url_parameter;
import ds/set;
import ru_proc;

main() -> void {
	file = getUrlParameter("file");
	if (!fileExists(file)) {
		println("file " + file + " is not found.");
	} else {
		dir = ruRemoveExt(file, "mm");
		file_mm = dir + ".mm";
		file_ru = dir + ".ru";
		file_mm1 = dir + "-1.mm";
		ensureDirectoryExists(dir);
		start = timestamp();
		ruCopyFile(file, dir + "/" + fileNameOnly(file));
		if (!setFileContent(dir + "/russell.conf", "import-roots=" + ruDirName(resolveRelativePath(file)) + "/" + dir + "/")) {
			println("Cannot create " + dir + "/russell.conf");
		} else {
			script = ruScriptWithDirs([
				Pair(dir + "/", "../../bin/russell verbose=1 caching=1 file=" + file_mm + " mm-2-ru=1 ru-root=. ru-write-all=1 mm-stats=1 mm-fix=1 mm-split=1 ru-imports=1"),
				Pair(dir + "/", "../../bin/russell verbose=1 caching=1 file=" + file_ru + " mm=" + file_mm1 + " ru-2-mm=1 ru-stats=1"),
				Pair(dir + "/", "../../bin/metamath 'read " + file_mm1 + "' 'verify proof *'  'exit'")
			]);
			if (script()) {
				println("Chain of translations finished successfully. =) in " + d2st((timestamp() - start)/ 1000.0, 2) + "s");
			} else {
				println("Chain of translations finished UN-successfully. =( in " + d2st((timestamp() - start)/ 1000.0, 2) + "s");
			}
		}
	}
}
