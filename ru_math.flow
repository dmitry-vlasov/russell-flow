import ds/tree;
import ru_conf;
import ru_src;

export {
	RuSymbs(
		i2s : Tree<int, string>,
		s2i : Tree<string, int>,
	);
	RuMath(
		sources : Tree<string, RuSource>,
		consts  : Tree<string, RuConst>,
		types   : Tree<string, RuType>,
		rules   : Tree<string, RuRule>,
		assertions : Tree<string, RuAssertion>,
		onError : (string, [RuPlace]) -> void,
		symbs   : RuSymbs,
	);
/*	
	ruAddSymb(s : string) -> RuSymbs {
		fastHashString
		switch (lookupTree(rs.s2i, s)) {
			Some(__): rs;
			None(): {
				id = length(rs.symbs);
				RuSymbs(rs with 
					symbs = concat(rs.symbs, [s]),
					s2i = setTree(rs.s2i, s, id)
				)
			}
		}
	}*/
}
