/**
	@help { Translates a $afile.mm to a directory$adir/$afile/$afile.ru }
	@defarg afile
	@category translate
	@arg afile { input metamath file without .mm extension @defval set }
*/

if (conf.working-dir != "") {
    adir = conf.working-dir;
} else {
    adir = cwd();
}

print "Translation: Metamath --> Russell";
print "---------------------------------";
print "file: $afile, dir: $adir";
print "";

conf-push
    project-roots=$adir/$afile/$afile.ru
    import-roots=$adir/$afile;
conf-save dir=$adir/$afile;

conf-pop;
conf-set ru-root=$adir/$afile;

//stats-mem;
conf-set 
    import-roots=$adir
    die-at-verify-failure=1 
    project-roots=
    mm-decompress-proofs=0;

read-mm $afile.mm;
	print ("mm read: " + read-mm.size + " files in " + time2s(read-mm.time));
mm-decompress-proofs;
	print ("mm decompresed: " + mm-decompress-proofs.size + " proofs in " + time2s(mm-decompress-proofs.time));
mm-verify;
	print ("mm verified: " + mm-verify.size + " files in " + time2s(mm-verify.time));
split-source-mm $afile.mm;
	print ("mm splited into: " + split-source-mm.size + " files in " + time2s(split-source-mm.time));
conf-load dir=$adir/$afile;

//conf verbose=1;
mm-to-ru $afile.mm;
	print ("mm translated: " + mm-to-ru.size + " files in " + time2s(mm-to-ru.time));
//conf verbose=0;

conf-set import-roots=$adir/$afile;
//stats-mem;
output_mem_stats;

optimize-imports-ru;
	print ("ru optimized imports of: " + optimize-imports-ru.size + " files in " + time2s(optimize-imports-ru.time));
verify;
	print ("ru verified: " + verify.size + " theorems in " + time2s(verify.time));
//stats-mem;
output_mem_stats;
write-ru;
	print ("ru has written: " + write-ru.size + " files in " + time2s(write-ru.time));

stats-math;
