/**
@help { 
	Try to prove a theorem automatically. Uses a full traverse of all variants, breadth-first search.
}
@category prover
@arg theorem { Theorem to prove }
@arg time_limit { Global time limit on optimization, sec. @defval 300 }
@arg max_depth { Maximum depth of a search tree. @defval 3 }
*/

print ("Going to prove $theorem. Time limit: " + time2s(time_limit));

started = time();

proved = false;
depth = 0;

prove-start theorem;

while ((depth < max_depth) && !proved) {
	prove-expand-leafs time-limit=$time_limit;
	depth = (1 + depth);
	proved = (proved || prove.success);
}

if proved {
	prove-confirm-proof;
	write-ru $theorem;
	print ("Theorem: $theorem was proved in " + time2s((time() - started)));
} else {
	print ("Theorem: $theorem was NOT proved in " + time2s((time() - started)));
}

prove-finish;
