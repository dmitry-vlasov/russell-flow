/**
@help { Tries to shorten proofs globaly. }
@category refactor
@arg time_limit { The global time limit on horten-proofs optimization, sec. @defval 900s }
@arg target { What to optimize: all, a source file or a theorem, sec. @defval all }
*/

if !isdef(have_read) {
	read;
}

print "";
print "Shortenning proofs, time limit: $time_limit s. ...";

conf verbose=1;
shorten-proofs $target time-limit=$time_limit;
conf verbose=0;

print ("optimized " + shorten-proofs.shortened-theorems + " theorems, reduced " + shorten-proofs.shortened-steps + " steps in " + time2s(shorten-proofs.time)); 
print ("max time: " + time2s(shorten-proofs.max_time) + ", max time theorem: " + shorten-proofs.max_time_id);

if (shorten-proofs.shortened-theorems > 0) {
    print "going to write shortened proofs math ... ";
	output_mem_stats;
	info-volume;
	verify;
	if verify.success {
		print "verify: success, ready to write optimized (shortened) proofs";
		output_mem_stats;
		info-volume;
		//conf verbose=2;
    	write-ru;
		//conf verbose=0;
		print ("shortened proofs are written in " + time2s(write-ru.time));
	} else {
		print "ERROR IN VERIFICATION";
	}
} else {
    print "no proofs were shortened";
}
