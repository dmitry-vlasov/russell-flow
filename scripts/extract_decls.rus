/**
@help { 
	Extracts all: consts, types, rules and axioms to separate files.
}
@category refactor
@arg time_limit { Global time limit on optimization, sec. @defval 900s }
*/

if !isdef(have_read) {
	read;
}

print "Extracting declarations: constants, types, rules and axioms";
print "";

extract_decls_started = time();

extract-constants;
	print ("\t" + extract-constants.size + " constants are extracted in " + time2s(extract-constants.time)); 

extract-types;
	print ("\t" + extract-types.size + " types are extracted in " + time2s(extract-types.time)); 

extract-rules;
	print ("\t" + extract-rules.size + " rules are extracted in " + time2s(extract-rules.time)); 

extract-axioms;
	print ("\t" + extract-axioms.size + " axioms are extracted in " + time2s(extract-axioms.time)); 

optimize-imports-ru;
	print ("\t" + optimize-imports-ru.size + " files are optimized (imports) in " + time2s(optimize-imports-ru.time)); 

verify;
	print ("verified  in " + time2s(verify.time)); 

write-ru;
	print ("extracted math is written in " + time2s(write-ru.time));

print ("Extraction ended in " + time2s((time() - extract_decls_started)));
