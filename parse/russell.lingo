source   = '\uFEFF'? ws decl*;
decl     = import | const | type | rule | axiom | def | theorem | scomment | comment;
import   = "import" ws symb ";;" ws;
comment  = scomment | mcomment;
scomment = "//" (!'\n' char_)* '\n' ws;
mcomment = "/*" (!"*/" char_)* "*/" ws;

const  = "constant" ws '{' symbol ascii? latex? '}' ws ;
symbol = "symbol" ws symb ";;" ws;
ascii  = "ascii" ws symb ";;" ws;
latex  = "latex" ws symb ";;" ws;

type    = "type" ws id (':' supers)? ";;" ws;
supers  = id super*;
super   = ',' ws id;

rule    = "rule" ws id vars '{' ws 
	term 
'}' ws;
axiom   = "axiom" ws id vars? disjs? '{' ws
	(hyps "-----" '-'*)?
	prop
'}' ws;

hyps = hyp+;
hyp = "hyp" ws ind expr;

def = "definition" ws id vars? disjs? '{' ws
	hyps?
	defiendum
	definiens
	"-----" '-'*
	prop
'}' ws;

defiendum = "defiendum" ws expr;
definiens = "definiens" ws expr;
prop  = "prop" ws expr;

theorem = "theorem" ws id vars? disjs? '{' ws  
	(hyps "-----" '-'* )?
	prop
'}' ws proof;

proof = "proof" ws vars? disjs? '{' ws
	step*
'}' ws;

step     = "step" ws ind type_id '=' id refs "|-" symb* ";;" ws;
refs     = '(' ws (ref refs1)? ')';
refs1    = (',' ws ref)*;
ref      = hyp_ref | step_ref;
hyp_ref  = "hyp" ws ind;
step_ref = "step" ws ind;

term  = "term" ws expr;

disjs  = "disjointed(" ws (disj disjs1)?  ")" ws;
disjs1 = (',' ws disj)*;
disj   = (!',' !')' symb)+;

vars  = '(' (var vars1*)? ')';
vars1 = ',' ws var;
var   = id type_id;
type_id = ':' ws id;

expr  = type_id '=' ws ("#" | "|-") symbs ";;" ws;

symbs = symb*;

symb  = (!(";;" | space) char_)+;
ind   = digit+;
digit = '0'-'9';
id = ('a-z' | 'A-Z' | '_' | '.' | '-' | '\'')+;

char_ = '\u0000'-'\uFFFF';
ws = space*;
space = ' ' | '\t' | '\n' | '\r';
