import ru_server;

ruComposeJob() -> RuJob {
	script = getUrlParameterDef("script", "");
	params = if (script == "") {
		getAllUrlParametersArray();
	} else {
		filtermap(
			strSplit2(getFileContent(script), [" ", "\n", "\r", "\t"]),
			\p -> {
				param = trim2(p, " \n\r\t");
				if (param == "") None() else Some(strSplit(param, "="));
			}
		);
	}
	ruMakeJob(params);
}

main() -> void {
	server = getUrlParameterDef("server", "");
	if (server != "lsp") {
		ruPrintln("Russell prover (4th generation)");
		ruPrintln("");
	}
	conf = ruMakeConf(".", 
		if (server == "") [] else getAllUrlParametersArray()
	);
	ruMakeCacheDir(conf);
	if (server == "http") {
		ruHttpServer(conf);
	} else if (server == "lsp") {
		ruLspServer(conf);
	} else if (server == "console") {
		ruConsoleServer(conf);
	} else if (server == "") {
		start = timestamp();
		ruRun(ruComposeJob(), ruPrintln, \code -> {
			ruPrintln("processed in " + d2st((timestamp() - start)/ 1000.0, 2) + "s" + 
				(if (code == 0) "" else " with exit code: " + i2s(code))
			);
			quit(code);
		});
	} else {
		ruPrintln("unsupported server mode: " + server);
		quit(0);
	}
}
