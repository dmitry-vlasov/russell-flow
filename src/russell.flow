import server;

main() -> void {
	setThreadPoolSize(availableProcessors());
	russell_dir = isUrlParameterSet("russell-dir");
	server = toLowerCase(getUrlParameterDef("server", ""));
	if (server != "lsp" && !russell_dir) {
		ruPrintln("Russell prover (4th generation)");
		ruPrintln("");
	}
	conf = ruMakeConf(".", 
		if (server == "") [] else getAllUrlParametersArray()
	);
	ruMakeCacheDir(conf);
	if (server == "http") {
		ruHttpServer(conf);
	} else if (server == "lsp") {
		ruLspServer(conf);
	} else if (server == "console" || server == "repl") {
		ruConsoleServer(conf);
	} else if (server == "") {
		if (russell_dir) {
			ruPrintln(getRussellDir());
			quit(0);
		} else {
			if (ruShowHelp(ruCommandsTree)) quit(0) else {
				start = timestamp();
				script_src = strGlue(map(getAllUrlParametersArray(), \p -> 
					if (p[1] == "") p[0] else p[0] + "=" + p[1]
				), " ");
				script = ruParseScScript(script_src);
				ruRun(script, ruPrintln, \code -> {
					ruPrintln("processed in " + d2st((timestamp() - start)/ 1000.0, 2) + "s" + 
						(if (code == 0) "" else " with exit code: " + i2s(code))
					);
					quit(code);
				});
			}
		}
	} else {
		ruPrintln("unsupported server mode: " + server);
		quit(0);
	}
}
