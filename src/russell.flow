import server;

ruComposeJob(conf : RuConf) -> RuJob {
	script = getUrlParameterDef("script", "");
	if (script == "") {
		params = getAllUrlParametersArray();
		if (params == []) {
			ruPrintln("Run 'russell help' to see the help.");
		}
		ruMakeJob(params);
	} else {
		ruComposeJobFromScript(script, conf);
	}
}

main() -> void {
	server = toLowerCase(getUrlParameterDef("server", ""));
	if (server != "lsp") {
		ruPrintln("Russell prover (4th generation)");
		ruPrintln("");
	}
	conf = ruMakeConf(".", 
		if (server == "") [] else getAllUrlParametersArray()
	);
	ruMakeCacheDir(conf);
	if (server == "http") {
		ruHttpServer(conf);
	} else if (server == "lsp") {
		ruLspServer(conf);
	} else if (server == "console" || server == "repl") {
		ruConsoleServer(conf);
	} else if (server == "") {
		start = timestamp();
		ruRun(ruComposeJob(conf), ruPrintln, \code -> {
			ruPrintln("processed in " + d2st((timestamp() - start)/ 1000.0, 2) + "s" + 
				(if (code == 0) "" else " with exit code: " + i2s(code))
			);
			quit(code);
		});
	} else {
		ruPrintln("unsupported server mode: " + server);
		quit(0);
	}
}
