import base/conf;

export {
	ruServerLog(message : string, conf : RuConf) -> void;
	ruDebugLog(message : string, conf : RuConf) -> void;
	ruScriptLog(message : string, conf : RuConf) -> void;
	ruCrashLog(message : string) -> void;
	ruCrash(message : string) -> void;
}

ruServerLog(message : string, conf : RuConf) -> void {
	ruCustomLog(message, conf, lookupTreeDef(conf.opts, "server", "no-server"));
}

ruDebugLog(message : string, conf : RuConf) -> void {
	ruCustomLog(message, conf, "debug");
}

ruScriptLog(message : string, conf : RuConf) -> void {
	ruCustomLog(message, conf, "script");
}

ruCrashLog(message : string) -> void {
	ruCustomLog(message, ruMakeConfDef(), "crash");
}

ruCrash(message : string) -> void {
	ruCrashLog(message);
	println(message);
	quit(1);
}

ruCustomLog(message : string, conf : RuConf, name : string) -> void {
	log_file = lookupTreeDef(conf.opts, name + "-log", getRussellDir() + "/log/russell_" + name + ".log");
	log_dir = ruDirName(log_file);
	if (log_dir != "") {
		err = ensureDirectoryExists(log_dir);
		if (err != "") {
			conf.onMessage(err);
		}
	}
	if (log_file != "") {
		log_size = s2i(lookupTreeDef(conf.opts, name + "log-size", "128"));
		ruWriteLogMessage(message, log_file, log_size);
	}
}