import base/conf;
import base/out;

export {
	RuEnv(
		conf : RuConf,
		out : RuOut
	);
	ruDefaultEnv = RuEnv(ruEmptyConf, ruDefaultOut);

	ruAddErr2Env(out : RuEnv, msg : string) -> RuEnv;
	ruAddErrCounter2Env(out : RuEnv, err_count : ref int) -> RuEnv;
	ruIncVerboseEnv(env : RuEnv) -> RuEnv;
	ruDecVerboseEnv(env : RuEnv) -> RuEnv;

	ruMakeEnv(conf : RuConf, onMessage : (string) -> void, onData : (string) -> void) -> RuEnv;
}

ruAddErr2Env(env : RuEnv, msg : string) -> RuEnv {
	RuEnv(env with out = ruAddErr2Out(env.out, msg));
}

ruAddErrCounter2Env(env : RuEnv, err_count : ref int) -> RuEnv {
	RuEnv(env with out = ruAddErrCounter2Out(env.out, err_count));
}

ruIncVerboseEnv(env : RuEnv) -> RuEnv {
	RuEnv(env with conf = ruIncVerboseConf(env.conf));
}

ruDecVerboseEnv(env : RuEnv) -> RuEnv {
	RuEnv(env with conf = ruDecVerboseConf(env.conf));
}

ruMakeEnv(conf : RuConf, onMessage : (string) -> void, onData : (string) -> void) -> RuEnv {
	RuEnv(conf, ruMakeOut(onMessage, nop1, conf.opts));
}
