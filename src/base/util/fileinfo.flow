import base/fileinfo;
import ru/cache/fileinfo;

export {
	ruNewFileInfo(module : string, conf : RuConf, ext : string) -> RuFileInfo;
	ruMakeFileInfo(file : string, conf : RuConf) -> RuFileInfo;
	ruUpdateFileInfo(info : RuFileInfo, working_dir : string) -> RuFileInfo;
	ruChangeImportRoot(info : RuFileInfo, new_root_dir : string, working_dir : string) -> RuFileInfo;
	ruLoadFileInfo(mod : string, path : string) -> Maybe<RuFileInfo>;
}

ruNewFileInfo(module : string, conf : RuConf, ext : string) -> RuFileInfo {
	root_opt = if (ext == ".ru") "ru-root" else if (ext == ".mm") "mm-root" else "";
	root = rtrim2(lookupTreeDef(conf.opts, root_opt, if (conf.workingDir == "") "." else conf.workingDir), "/");
	file = root + "/" + module + ext;
	info = RuFileInfo(s2id(module), module, file, 0.0, ruIdsVersion());
	ruFileInfoCacheAdd(info);
	info;
}

ruMakeFileInfo(file : string, conf : RuConf) -> RuFileInfo {
	module = ruTrimPath(file, conf, getFileExt(file));
	info = RuFileInfo(s2id(module), module, file, fileModified(file), ruIdsVersion());
	ruFileInfoCacheAdd(info);
	info;
}

ruUpdateFileInfo(info : RuFileInfo, working_dir : string) -> RuFileInfo {
	RuFileInfo(info with 
		modified = fileModified(info.path),
		path = ruResolveRelativePath(info.path, working_dir)
	);
}

ruChangeImportRoot(info : RuFileInfo, new_root : string, working_dir : string) -> RuFileInfo {
	RuFileInfo(info with
		path = rtrim2(ruResolveRelativePath(new_root, working_dir), "/") + "/" + info.module + getFileExt(info.path)
	);
}

ruLoadFileInfo(mod : string, path : string) -> Maybe<RuFileInfo> {
	if (!fileExists(path)) None() else {
		info = RuFileInfo(s2id(mod), mod, path, fileModified(path), ruIdsVersion());
		ruFileInfoCacheAdd(info);
		Some(info);
	}
}
