import formats/json/json;
import base/env;
import base/dir;

export {
	ruGetDbItem(db : string, path : [string], env : RuEnv) -> Json;
	ruSetDbItem(db : string, path : [string], item : Json, env : RuEnv) -> void;
}

ruGetDbItem(db : string, path : [string], env : RuEnv) -> Json {
	db_path = pathCombineMany([getRussellDir(), "db", changeFileExt(db, ".json")]);
	db_json = parseJsonSafe(getFileContent(db_path));
	getJsonNestedField(db_json, path);
}

ruSetDbItem(db : string, path : [string], item : Json, env : RuEnv) -> void {
	db_path = pathCombineMany([getRussellDir(), "db", changeFileExt(db, ".json")]);
	db_json = parseJsonSafe(getFileContent(db_path));
	db_modified = setJsonNestedField(db_json, path, item);
	if (!setFileContent(db_path, json2stringFormatted(db_modified))) {
		env.out.onError("Failed to update DB " + db, []);
	}
}