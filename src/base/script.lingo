script1 = ws script;
non_seq = if | while | assign | task;
script = non_seq:ns script2:j { makeScript(:ns, :j) };
	script2 = seq | empty_seq;
	empty_seq = '' { makeEmptySeq() };
	seq  = script+ :js { RuSeq(:js) };

	if      = "if" ws cond:c '{' ws script:j '}' ws    { RuIf(:c, :j) };
	while   = "while" ws cond:c '{' ws script:j '}' ws { RuWhile(:c, :j) };
	assign  = id:i '=' ws val:v ';' ws                 { RuAssign(:i, :v) };
	task    = id:i args:as ';' ws                      { makeTask(:i, :as) };
	cond    = '(' ws val:l op:o val:r ')' ws           { RuCond(:o, :l, :r) };

val = bin_op | un_op | int_const | key;
	bin_op    = '(' ws val:l op:o val:r ')' ws { RuBinOp(:o, :l, :r) };
	un_op     = op:o val:v { RuUnOp(:o, :v) };
	int_const = digit+ $s ws { RuIntConst(s2i(:s)) };
	key       = id:i { RuKey(:i) };

id   = (id_start id_symb*) $s ws { :s };
str  = (!ws any)+ $s ws { :s };
op   = (!n_op any)+ $s ws { :s };
n_op = space | '(' | ')' | id_start | digit;
args = (!';' any)* $s ws { :s };

digit    = '0'-'9';
id_symb  = 'a'-'z' | 'A'-'Z' | '0'-'9' | '-' | '_' | '.';
id_start = 'a'-'z' | 'A'-'Z';

space = ' ' | '\t' | '\n' | '\r';
ws = (space | comment1 | comment2)*;
comment1 = "//" (!'\n' any)* '\n';
comment2 = "#" (!'\n' any)* '\n';

any = '\u0000'-'\uFFFF';
