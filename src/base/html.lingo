source = ws element*;
element = text | entity | tag ;
text = (!('<' | '&') any)+ $t { HtmlText($t) };

entity = dec_entity | hex_entity | code_entity;
dec_entity = "&#" dec_digit+ $c (ws ';')? ws { HtmlDecEntity($c) };
hex_entity = "&#x" hex_digit+ $c (ws ';')? ws { HtmlHexEntity($c) };
code_entity = '&' letter+ $c (ws ';')? ws { HtmlCodeEntity($c) };

tag = tag_openclose | tag_open;
tag_openclose = '<' ws id$i ws attrib*:as "/>" ws { makeHtmlSingleTag($i, :as) };
tag_open = '<' ws id$open ws attrib*:as ">" ws element*:body "</" ws id$close ">" ws  { makeHtmlBodyTag($open, :as, :body, $close) };

attrib = attrib1 | attrib2 | attrib3;
attrib1 = id$k ws '=' ws '\'' (!'\'' any)* $v '\'' ws { HtmlAttrib($k, $v) };
attrib2 = id$k ws '=' ws "\"" (!"\"" any)* $v "\"" ws { HtmlAttrib($k, $v) };
attrib3 = id$k ws '=' ws val$v ws { HtmlAttrib($k, $v) };

dec_digit = '0'-'9';
hex_digit = dec_digit | 'A'-'F' | 'a'-'f';
letter = 'a'-'z' | 'A'-'Z';
id = letter (letter | dec_digit)*;
val = (letter | dec_digit | '_' | '-')+;

non_text = '<' | '&';

s = ws_+;
ws = ws_*;
ws_ = ' ' | '\t' | '\n' | '\r';

any = '\u0000'-'\uFFFF';
