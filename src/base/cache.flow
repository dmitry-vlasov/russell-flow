import base/dir;
import base/conf;
import base/out;

export {
	ruCacheDir(conf : RuConf, mode : string) -> string;
	ruCachedPath(file : string, mode : string, conf : RuConf) -> string;
	ruCachedFile(path : string, mode : string, conf : RuConf) -> string;
	ruEnsureFileDirectoryExists(file : string, out : RuOut) -> void;
	ruEnsureDirectoryExists(dir : string, out : RuOut) -> void;
}

ruCacheDir(conf : RuConf, mode : string) -> string {
	russell_dir = rtrim2(getRussellDir(), "/");
	base_cache = lookupTreeDef(conf.opts, "cache-dir", russell_dir + "/cache");
	dir = if (mode == "") base_cache else {
		rtrim2(base_cache, "/") + "/" + mode;
	}
	rtrim2(dir, "/");
}

ruCachedPath(file : string, mode : string, conf : RuConf) -> string {
	dir = ruCacheDir(conf, mode) + "/" + ruDirName(file);
	ruCacheDir(conf, mode) + "/" + strReplace(file, ":", "_CCOOLLOONN_")  + ".cache";
}

ruCachedFile(path : string, mode : string, conf : RuConf) -> string {
	cache_dir = ruCacheDir(conf, mode);
	if (!startsWith(path, cache_dir)) "" else {
		changeFileExt(
			strReplace(
				strRight(path, strlen(cache_dir)),
				"_CCOOLLOONN_", ":"
			),
			""
		);
	}
}

ruEnsureFileDirectoryExists(file : string, out : RuOut) -> void {
	dir = ruDirName(file);
	err = ensureDirectoryExists(dir);
	if (err != "") {
		out.onError("cannot create directory for the file: '" + file + "': " + err, []);
	}
}

ruEnsureDirectoryExists(dir : string, out : RuOut) -> void {
	err = ensureDirectoryExists(dir);
	if (err != "") {
		out.onError("cannot create directory: '" + dir + "': " + err, []);
	}
}
