import sys/system;
import fs/filesystem;

export {
	getRussellDir() -> string;
	findRussellDir() -> string; // silent version of getRussellDir
}

ruRussellDir : ref Maybe<string> = ref None();

getRussellDir() -> string {
	russell_dir = findRussellDir();
	if (russell_dir != "") russell_dir else {
		println("WARNING: Could not determine the russell directory.");
		"";
	}
}

findRussellDir() -> string {
	init_dir = \-> {
		// Use the 'print-flow-dir=1' option of flowc
		appPath = strReplace(getApplicationPath(), "\\", "/");
		russellDirByRussell = \-> {
			if (fileNameOnly(appPath) == "russell.jar") {
				// russell must not use itsef in this function, 
				// otherwise there's a fork bomb.
				"" 
			} else {
				dir_lines = ref "";
				err_lines = ref "";
				code = execSystemProcess("russell", ["russell-dir"], ".", 
					\out -> dir_lines := ^dir_lines + out, 
					\err -> {
						println(err);
						err_lines := err;
					}
				);
				filtered = filtermap(strSplit(^dir_lines, "\n"), \line -> {
					line1 = trim2(line, " \n\t\r");
					if (line1 == "") None() else Some(line1);
				});
				if (code != 0 || ^err_lines != "" || length(filtered) != 1) "" else {
					filtered[0];
				}
			}
		}
		// Use the path of the executable
		russellDefDir = \-> {
			if (strContains(appPath, "russell/bin/")) {
				takeBefore(appPath, "/bin/", appPath) + "/"
			} else if (strContains(appPath, "russell-flow/bin/")) {
				takeBefore(appPath, "/bin/", appPath)
			} else if (strContains(appPath, "russell-flow/src/russell")) {
				takeBefore(appPath, "src/russell", appPath)
			} else if (strContains(appPath, "russell/src/russell")) {
				takeBefore(appPath, "src/russell", appPath)
			} else if (strContains(appPath, "bin/")) {
				takeBefore(appPath, "bin/", appPath)
			} else {
				russellDirByRussell();
			}
		}
		rus_dir = getUrlParameter("russell-dir");
		strReplace(if (rus_dir != "") rus_dir else russellDefDir(), "\\", "/");
    }
    onlyOnce(ruRussellDir, init_dir);
}
