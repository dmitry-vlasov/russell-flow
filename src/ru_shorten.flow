import ru_refactor;
import ru_index;

export {
	ruShortenTheorem(theorem : RuTheorem, math : RuMath) -> Maybe<RuTheorem>;
}

RuShortenAcc(
	variants : Tree<int,[RuStep]>,
	premises : RuIndex<RuShortenPremise>
);

RuShortenPremise ::= RuHyp, RuStep;

ruShortenTheorem(theorem : RuTheorem, math : RuMath) -> Maybe<RuTheorem> {
	initPremises = fold(theorem.hyps, ruMakeIndex(), \acc, hyp -> ruSetIndex(hyp.expr, hyp, acc));
	variants = fold(theorem.proof.steps, RuShortenAcc(makeTree(), initPremises), \acc, step ->
		
		
	).variants;
}
