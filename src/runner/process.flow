import server/http;
import lsp/process;

export {
	RuRequestFuncs(
		out : RuOut,
		finish : (int) -> void,
		log : (string) -> void, 
		exit : () -> void,
	);

	ruProcessRequest(
		conf : RuConf, 
		req : RuRequest,
		funcs : RuRequestFuncs,
		process : (ScScript, (int) -> void, RuOut) -> void
	) -> void;
}

ruProcessRequest(
	conf : RuConf, 
	req : RuRequest,
	funcs : RuRequestFuncs,
	process : (ScScript, (int) -> void, RuOut) -> void
) -> void {
	if (req.body != "") {
		json = parseJsonSafe(req.body);
		switch (ruJson2Script(json)) {
			Some(script): {
				process(script,
					\code  -> {
						if (exists(ruScriptTasks(script), \task -> task.command == "server-shutdown")) {
							funcs.exit();
						} else {
							funcs.finish(code);
						}
					},
					funcs.out,
				);
			}
			None(): {
				switch (json) {
					JsonObject(members): {
						if (!jsonObjectHasField(json, "jsonrpc")) {
							funcs.log("WARNING: Illegal request. (ruProcessRequest 1): \n" + req.body);
							funcs.finish(1);
						} else {
							ruLspProcessRequest(conf, json, \s -> {
								funcs.out.onData(s);
								funcs.finish(0);
							}, funcs.exit, process);
						}
					}
					default: {
						funcs.log("WARNING: Illegal request. (ruProcessRequest 1): \n" + req.body);
						funcs.finish(1);
					}
				}
			}
		}
	}
}
