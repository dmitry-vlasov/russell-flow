import ru_conf;

export {

	RuCommand(
		name : string,
		conf : RuConf
	);

	ruConf2Commands(conf : RuConf) -> [RuCommand];
	ruMakeOpts(args : [string]) -> Tree<string, string>;
}

ruConf2Commands(conf : RuConf) -> [RuCommand] {
	getTreeValues(foldTree(conf.opts, makeTree(), \id, opt, acc ->
		if (!isDigits(id)) acc else {
			splitted = strSplit(opt, ",");
			if (length(splitted) == 0) acc else {
				setTree(acc, s2i(id), 
					RuCommand(splitted[0], RuConf(conf with opts = ruMakeOpts(tail(splitted))))
				);
			}
		}
	));
}

ruMakeOpts(args : [string]) -> Tree<string, string> {
	fold(args, makeTree(), \acc, opt ->
		if (opt == "") acc else {
			eqi = strIndexOf(opt, "=");
			if (eqi == -1) {
				setTree(acc, "default", opt);
			} else {
				key = substring(opt, 0, eqi);
				val = substring(opt, eqi + 1, strlen(opt));
				setTree(acc, key, val);
			}
		}
	);
}