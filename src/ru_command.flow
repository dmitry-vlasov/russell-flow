import ru_math;
import mm_src;

export {
	RuEnv(
		ruMath : RuMath, 
		mmMath : MmMath,
		conf   : RuConf
	);
	RuCommArg(
		name : string,
		optional : bool,
		help : string,
		defval : string
	);
	RuComm(
		name : string,
		category : string,
		help : string,
		args : [RuCommArg],
		run : (RuTask, RuEnv) -> RuEnv
	);

	ruCommArg2s(arg : RuCommArg) -> string;
	ruComm2s(comm : RuComm) -> string;
	ruComms2s(comms : [RuComm]) -> string ;
}

ruCommArg2s(arg : RuCommArg) -> string {
	arg.name + " " + 
	(if (arg.optional) "(optional) " else "") + arg.help + 
	(if (arg.defval == "") "" else " defval: " + arg.defval);
}

ruComm2s(comm : RuComm) -> string {
	"    " + comm.name + "\t[" + comm.category + "]\t" + comm.help + 
	if (comm.args == []) "" else 
		", arguments: " + strGlue(map(comm.args, ruCommArg2s), ", ");
}

ruComms2s(comms : [RuComm]) -> string {
	max_name = ruMaxIntFromArray(map(comms, \comm -> strlen(comm.name)));
	max_category = ruMaxIntFromArray(map(comms, \comm -> strlen(comm.category)));
	"    " + 
	"command" + strRepeat(" ", max_name - strlen("command") + 3) + 
	"[category]" + strRepeat(" ", max_category - strlen("category") + 3) +
	"description\n" +
	"    " + 
	"-------" + strRepeat(" ", max_name - strlen("-------") + 3) + 
	"----------" + strRepeat(" ", max_category - strlen("----------") + 5) +
	"-------------\n" +
	strGlue(
		map(comms, \comm ->
			"    " + 
			comm.name + strRepeat(" ", max_name - strlen(comm.name) + 3) + 
			"[" + comm.category + "]" + strRepeat(" ", max_category - strlen(comm.category) + 3) +
			comm.help + if (comm.args == []) "" else ", arguments: " + strGlue(map(comm.args, ruCommArg2s), ", ")
		),
		"\n"
	);
}