import ru_math;

export {

	RuProverProofHyp ::= RuProverProofTop, RuProverProofExp;
		RuProverProofTop(
			ind : int, 
			sub : Tree<RuVar, RuExp>,
			parent : RuProverProofProp
		);
		RuProverProofExp(
			expr : RuExp, 
			sub : Tree<RuVar, RuExp>,
			child : RuProverProofProp,
			parent : RuProverProofProp
		);
	RuProverProofProp(
		assertion : RuAssertion,
		children : [RuProverProofHyp],
		parent : RuProverProofExp,
		sub : Tree<RuVar, RuExp>
	);

	RuProverProp(
		children : [RuProverHyp],
		parent : RuProverHyp,
		assertion : RuAssertion,
		proofs : [RuProverProofProp],
		sub : Tree<RuVar, RuExp>,
		outer : Tree<RuVar, RuExp>,
		fresher : Tree<RuVar, RuExp>,
	);

	RuProverHyp(
		children : [RuProverProp],
		parent : Maybe<RuProverProp>,
		proofs : [RuProverProofHyp],
		expr : RuExp,
	);

	RuProverTree(
		root : RuProverHyp,
		leafs : [RuProverProp]
	);
}
