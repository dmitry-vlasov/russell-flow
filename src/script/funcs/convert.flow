import script/func;
import script/util;

export {
	ruScriptConvertFuncs() -> [ScriptFn];
}

ruScriptConvertFuncs() -> [ScriptFn] {
	[
		ScriptFn("i2d", \args, state, out -> ruEvalIntFn(args, \as -> Some(ScDouble(i2d(as[0]))),    "i2d", 1)),
		ScriptFn("i2s", \args, state, out -> ruEvalIntFn(args, \as -> Some(ScString(i2s(as[0]))),    "i2s", 1)),
		ScriptFn("i2b", \args, state, out -> ruEvalIntFn(args, \as -> Some(ScBool(as[0] != 0)),      "i2b", 1)),
		ScriptFn("d2i", \args, state, out -> ruEvalDoubleFn(args, \as -> Some(ScInt(round(as[0]))),  "d2i", 1)),
		ScriptFn("d2s", \args, state, out -> ruEvalDoubleFn(args, \as -> Some(ScString(d2s(as[0]))), "d2s", 1)),
		ScriptFn("d2b", \args, state, out -> ruEvalDoubleFn(args, \as -> Some(ScBool(as[0] != 0.0)), "d2b", 1)),
		ScriptFn("s2i", \args, state, out -> ruEvalStringFn(args, \as -> Some(ScInt(s2i(as[0]))),    "s2i", 1)),
		ScriptFn("s2d", \args, state, out -> ruEvalStringFn(args, \as -> Some(ScDouble(s2d(as[0]))), "s2d", 1)),
		ScriptFn("s2b", \args, state, out -> ruEvalStringFn(args, \as -> Some(ScBool(as[0] != "false")), "s2b", 1)),
		ScriptFn("a2i", \args, state, out -> 
			ruEvalValueFn(args, \as ->
				switch (as[0]) {
					ScInt(v):    Some(as[0]);
					ScDouble(v): Some(ScInt(round(v)));
					ScString(v): Some(ScInt(s2i(v)));
					ScBool(v):   Some(ScInt(if (v) 1 else 0));
					default:      None();
				}, "a2i", 1
			)
		),
		ScriptFn("a2d", \args, state, out -> 
			ruEvalValueFn(args, \as ->
				switch (as[0]) {
					ScInt(v):    Some(ScDouble(i2d(v)));
					ScDouble(v): Some(as[0]);
					ScString(v): Some(ScDouble(s2d(v)));
					ScBool(v):   Some(ScDouble(if (v) 1.0 else 0.0));
					default:      None();
				}, "a2d", 1
			)
		),
		ScriptFn("a2s", \args, state, out ->
			ruEvalValueFn(args, \as ->
				switch (as[0]) {
					ScInt(v):    Some(ScString(i2s(v)));
					ScDouble(v): Some(ScString(d2s(v)));
					ScString(v): Some(as[0]);
					ScBool(v):   Some(ScString(if (v) "true" else "false"));
					default:      None();
				}, "a2s", 1
			)
		),
		ScriptFn("a2b", \args, state, out -> 
			ruEvalValueFn(args, \as ->
				switch (args[0]) {
					ScInt(v):    Some(ScBool(v != 0));
					ScDouble(v): Some(ScBool(v != 0.0));
					ScString(v): Some(ScBool(v != "false"));
					ScBool(v):   Some(args[0]);
					default:      None();
				}, "a2b", 1
			)
		),
	]
}
