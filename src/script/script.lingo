script1 = ws script;
non_seq = if | while | print | assign | task ;
script = non_seq:ns script2:j { makeScScript(:ns, :j) };
	script2 = seq | empty_seq;
	empty_seq = '' { makeEmptySeq() };
	seq  = script+ :js { ScSeq(:js) };

	if      = "if" ws exp:c '{' ws script:j '}' ws    { ScIf(:c, :j) };
	while   = "while" ws exp:c '{' ws script:j '}' ws { ScWhile(:c, :j) };
	print   = "print" ws exp:e ';' ws                 { ScPrint(:e) };
	assign  = id:i '=' ws exp:v ';' ws                { ScAssign(:i, :v) };
	task    = id:i args:as ';' ws                     { makeScTask(:i, :as) };

exp = infix_op | pref_op | func | double_const | int_const | string_const | var;
	infix_op  = '(' ws exp:e infix_arg+:as ')' ws { ScInfixOp(:e, :as) };
	infix_arg = op:o exp:v                        { ScInfixArg(:o, :v) };
	pref_op   = op:o exp:v                        { ScPrefixOp(:o, :v) };
	func      = id:fn '(' ws func_arg*:as ')' ws  { ScFunc(:fn, :as) };
	func_arg  = exp:arg (',' ws)?                 { :arg };
	double_const = (digit+ '.' digit+) $s ws      { ScDoubleConst(s2d(:s)) };
	string_const = '"' (!'"' any)* $s '"' ws      { ScStringConst(:s) };
	int_const = digit+ $s ws                      { ScIntConst(s2i(:s)) };
	var       = id:i                              { ScVar(:i) };

id   = (id_start id_symb*) $s ws { :s };
str  = (!ws any)+ $s ws { :s };
op   = (!n_op any)+ $s ws { :s };
n_op = space | '(' | ')' | '"' | id_start | digit;
args = (!';' any)* $s ws { :s };

digit    = '0'-'9';
id_symb  = 'a'-'z' | 'A'-'Z' | '0'-'9' | '-' | '_' | '.';
id_start = 'a'-'z' | 'A'-'Z';

space = ' ' | '\t' | '\n' | '\r';
ws = (space | comment1 | comment2)*;
comment1 = "//" (!'\n' any)* '\n';
comment2 = "#" (!'\n' any)* '\n';

any = '\u0000'-'\uFFFF';
