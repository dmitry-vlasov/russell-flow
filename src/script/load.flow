import script/script;

export {
	ruLoadScript(file : string, conf : RuConf) -> Maybe<ScScriptSrc>;
	ruLoadAllScripts(conf : RuConf) -> [ScScriptSrc];
}

ruFindScript(name : string, conf : RuConf) -> Maybe<RuFileInfo> {
	scripts_dir = getRussellDir() + "/" + "scripts";
	if (fileExists(name)) {
		ruLoadFileInfo(name, name); 
	} else  if (fileExists(name + ".rus")) {
		ruLoadFileInfo(name, name + ".rus");
	} else if (fileExists(conf.workingDir + "/" + name)) {
		ruLoadFileInfo(name, conf.workingDir + "/" + name);
	} else if (fileExists(pathCombine(conf.workingDir, name + ".rus"))) {
		ruLoadFileInfo(name, conf.workingDir + "/" + name + ".rus");
	} else if (fileExists(scripts_dir + "/" + name)) {
		ruLoadFileInfo(name, scripts_dir + "/" + name); 
	} else if (fileExists(scripts_dir + "/" + name + ".rus")) {
		ruLoadFileInfo(name, scripts_dir + "/" + name + ".rus");
	} else {
		None();
	}
}

ruLoadScript(name : string, conf : RuConf) -> Maybe<ScScriptSrc> {
	maybeBind(
		ruFindScript(name, conf),
		\info -> {
			switch (ruParseScript(info.source)) {
				Some(script): {
					if (ruVerbose(conf) >= 3) {
						conf.onMessage("\tScript '" + name + "' is loaded: " + ruScript2s(script));
					}
					Some(ScScriptSrc(script, info));
				}
				None(): {
					conf.onMessage("\tSyntax error in script: '" + escapeStr(info.source) + "'");
					None();
				}
			}
		}
	);
}

ruLoadAllScripts(conf : RuConf) -> [ScScriptSrc] {
	scripts_dir = pathCombine(getRussellDir(), "scripts");
	script_names = concat3(
		filtermap(readDirectory(scripts_dir), \file -> 
			if (endsWith(file, ".rus")) Some(file) else None()
		),
		filtermap(readDirectory(conf.workingDir), \file -> 
			if (endsWith(file, ".rus")) Some(file) else None()
		),
		filtermap(readDirectory("."), \file -> 
			if (endsWith(file, ".rus")) Some(file) else None()
		),
	);
	filtermap(script_names, \name -> ruLoadScript(name, conf));
}
