import script/src;
import script/doc;

export {
	ruLoadScript(file : string, env : RuEnv) -> Maybe<ScScriptSrc>;
	ruLoadAllScripts(env : RuEnv) -> [ScScriptSrc];
}

ruFindScript(name : string, env : RuEnv) -> Maybe<RuFileInfo> {
	scripts_dir = getRussellDir() + "/" + "scripts";
	if (fileExists(name)) {
		ruLoadFileInfo(name, name); 
	} else  if (fileExists(name + ".rus")) {
		ruLoadFileInfo(name, name + ".rus");
	} else if (fileExists(env.conf.workingDir + "/" + name)) {
		ruLoadFileInfo(name, env.conf.workingDir + "/" + name);
	} else if (fileExists(pathCombine(env.conf.workingDir, name + ".rus"))) {
		ruLoadFileInfo(name, env.conf.workingDir + "/" + name + ".rus");
	} else if (fileExists(scripts_dir + "/" + name)) {
		ruLoadFileInfo(name, scripts_dir + "/" + name); 
	} else if (fileExists(scripts_dir + "/" + name + ".rus")) {
		ruLoadFileInfo(name, scripts_dir + "/" + name + ".rus");
	} else {
		None();
	}
}

ruLoadScript(name : string, env : RuEnv) -> Maybe<ScScriptSrc> {
	maybeBind(
		ruFindScript(name, env),
		\info -> {
			source = getFileContent(info.path);
			switch (ruParseScript(source)) {
				Some(s): {
					if (ruVerbose(env.conf) >= 3) {
						env.out.onMessage("\tScript '" + name + "' is loaded: " + ruScComm2s(s.comm));
					}
					Some(ScScriptSrc(s.comm, ruParseScriptDoc(name, s.docs), info));
				}
				None(): {
					env.out.onMessage("\tSyntax error in script: '" + escapeStr(source) + "'");
					None();
				}
			}
		}
	);
}

ruLoadAllScripts(env : RuEnv) -> [ScScriptSrc] {
	scripts_dir = pathCombine(getRussellDir(), "scripts");
	script_names = concat3(
		filtermap(readDirectory(scripts_dir), \file -> 
			if (endsWith(file, ".rus")) Some(file) else None()
		),
		filtermap(readDirectory(env.conf.workingDir), \file -> 
			if (endsWith(file, ".rus")) Some(file) else None()
		),
		filtermap(readDirectory("."), \file -> 
			if (endsWith(file, ".rus")) Some(file) else None()
		),
	);
	filtermap(script_names, \name -> ruLoadScript(name, env));
}
