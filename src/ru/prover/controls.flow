import ru/prover/tree;

export {

	RuProverTactic(
		description : string,
		expand : (RuProverTree) -> [RuProverProp],
		finished : (RuProverTree) -> bool
	);

	RuProverStrategy(
		description : string,
		initTactic : () -> RuProverTactic,
		nextTactic : (RuProverTree) -> RuProverTactic,
		finished : (RuProverTree) -> bool
	);

	ruMakeDefaultTactic() -> RuProverTactic;
	ruMakeDefaultStrategy() -> RuProverStrategy;
}

ruMakeDefaultTactic() -> RuProverTactic {
	RuProverTactic("default tactic",
		\tree -> getTreeValues(tree.leafs),
        \tree -> length(^(tree.proofs)) > 0
	);
}

ruMakeDefaultStrategy() -> RuProverStrategy {
	RuProverStrategy("default strategy",
		ruMakeDefaultTactic,
		\tree -> RuProverTactic("none tactic",
			\__ -> [],
			\__ -> true
		),
		\tree -> length(^(tree.proofs)) > 0
	);
}
