import base/vol;
import ru/src;

export {
	ruJavaDeclInfoVol(info : RuDeclInfo) -> double;
	ruJavaStatementVol(stat : RuStatement) -> double;
	ruJavaRuVol(any : RuAny) -> double;
}

ruJavaDeclInfoVol(info : RuDeclInfo) -> double {
	ruJavaAlignVol(
		ruJavaObjectHeader() +
		ruJavaIntVol() +
		ruJavaIntVol() +
		ruJavaArrayVol(info.comments, ruJavaRuVol) +
		ruJavaIntVol()
	);
}

ruJavaStatementVol(stat : RuStatement) -> double {
	ruJavaAlignVol(
		ruJavaObjectHeader() +
		ruJavaRuVol(stat.vars) +
		ruJavaArrayVol(stat.hyps, ruJavaRuVol) +
		ruJavaRuVol(stat.prop)
	);
}

ruJavaRuVol(any : RuAny) -> double {
	ruJavaAlignVol(
		ruJavaObjectHeader() +
		switch (any) {
			RuSource(imps, decls, comms, info): 
				ruJavaArrayVol(imps, ruJavaRuVol) + ruJavaArrayVol(decls, ruJavaRuVol) + ruJavaArrayVol(comms, ruJavaRuVol) + ruJavaFileInfoVol(info);
			RuImport(id, pos):
				ruJavaIntVol() + ruJavaIntVol();
			RuConst(info, ascii, latex): 
				ruJavaDeclInfoVol(info) + ruJavaIntVol() + ruJavaIntVol(); 
			RuType(info, supers): 
				ruJavaDeclInfoVol(info) + ruJavaArrayVol(supers, \__ -> ruJavaIntVol());
			RuRule(info, vars, term):
				ruJavaDeclInfoVol(info) + ruJavaTreeVol(vars, \__->ruJavaIntVol(), ruJavaRuVol) + ruJavaRuVol(term);
			RuAxiom(info, stat): 
				ruJavaDeclInfoVol(info) + ruJavaStatementVol(stat);
			RuDef(info, stat, defm, defs):
				ruJavaDeclInfoVol(info) + ruJavaStatementVol(stat) + ruJavaRuVol(defm) + ruJavaRuVol(defs);
			RuTheorem(info, stat, meta, proof): 
				ruJavaDeclInfoVol(info) + ruJavaStatementVol(stat) + ruJavaSetVol(meta, \__->ruJavaIntVol()) + ruJavaRuVol(proof); 
			RuHyp(ind, expr, pos): 
				ruJavaIntVol() + ruJavaRuVol(expr) + ruJavaIntVol();
			RuProof(vars, steps, pos): 
				ruJavaRuVol(vars) + ruJavaArrayVol(steps, ruJavaRuVol) + ruJavaIntVol();
			RuStep(ind, assertion, refs, expr, proof, pos):
				ruJavaIntVol() + ruJavaIntVol() + ruJavaArrayVol(refs, ruJavaRuVol) + ruJavaRuVol(expr) + ruJavaRuVol(proof) + ruJavaIntVol();
			RuComment(text, ann, pos): 
				ruJavaStringVol(text) + ruJavaStringVol(json2string(ann)) + ruJavaIntVol();
			RuVarsDisjs(vars, disjs): 
				ruJavaTreeVol(vars, \__-> ruJavaIntVol(), ruJavaRuVol) + ruJavaSetVol(disjs, ruJavaRuVol);
			RuDisj(v1, v2): 
				ruJavaRuVol(v1) + ruJavaRuVol(v2);
			RuExp(nodes, pos): 
				ruJavaArrayVol(nodes, ruJavaRuVol) + ruJavaIntVol();
			RuHypRef(i): 
				ruJavaIntVol();
			RuStepRef(i): 
				ruJavaIntVol();
			RuVar(id, type_id): 
				ruJavaIntVol() + ruJavaIntVol();
			RuTerm(type_id, nodes, pos): 
				ruJavaIntVol() + ruJavaArrayVol(nodes, ruJavaRuVol) + ruJavaIntVol();
			RuConstRef(id): 
				ruJavaIntVol();
			RuRuleNode(rule_type, arity_len): 
				ruJavaIntVol() + ruJavaIntVol(); // + ruJavaIntVol() + ruJavaIntVol();
		}
	);
}
