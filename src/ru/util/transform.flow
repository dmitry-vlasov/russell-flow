import ru/src;

export {
	ruTransformStatement(st: RuStatement, f : (RuExp) -> RuExp) -> RuStatement;
	ruTransformTheorem(th: RuTheorem, f : (RuExp) -> RuExp) -> RuTheorem;
	ruTransformProof(th: RuProof, f : (RuExp) -> RuExp) -> RuProof;
	ruTransformAxiom(ax: RuAxiom, f : (RuExp) -> RuExp) -> RuAxiom;
	ruTransformDef(def: RuDef, f : (RuExp) -> RuExp) -> RuDef;
}

ruTransformProof(proof: RuProof, f : (RuExp) -> RuExp) -> RuProof {
	RuProof(proof with 
		steps = map(proof.steps, \step ->
			RuStep(step with expr = f(step.expr))
		)
	);
}

ruTransformTheorem(th: RuTheorem, f : (RuExp) -> RuExp) -> RuTheorem {
	RuTheorem(th with
		stat = ruTransformStatement(th.stat, f),
		proof = ruTransformProof(th.proof, f)
	);
}

ruTransformStatement(st: RuStatement, f : (RuExp) -> RuExp) -> RuStatement {
	RuStatement(st with
		hyps = map(st.hyps, \h -> RuHyp(h with expr = f(h.expr))),
		prop = f(st.prop)
	);
}

ruTransformAxiom(ax: RuAxiom, f : (RuExp) -> RuExp) -> RuAxiom {
	RuAxiom(ax with 
		stat = ruTransformStatement(ax.stat, f)
	);
}

ruTransformDef(def: RuDef, f : (RuExp) -> RuExp) -> RuDef {
	RuDef(def with
		stat = ruTransformStatement(def.stat, f),
		defm = f(def.defm),
		defs = f(def.defs)
	);
}
